#!/usr/bin/env bash
set -e

echo "üîí Pre-commit checks‚Ä¶"

# 1. Redaction check
ROOT="$(git rev-parse --show-toplevel)"
FORBIDDEN_FILE="${ROOT}/.redaction/forbidden.regex"
ALLOW_FILE="${ROOT}/.redaction/allowlist.regex"

if [[ -f "$FORBIDDEN_FILE" ]]; then
  FORBIDDEN="$(tr '\n' '|' < "$FORBIDDEN_FILE" | sed 's/|$//')"
  ALLOW=""
  [[ -f "$ALLOW_FILE" ]] && ALLOW="$(tr '\n' '|' < "$ALLOW_FILE" | sed 's/|$//')"

  FILES=$(git diff --cached --name-only --diff-filter=ACM | tr '\n' ' ')
  [[ -z "$FILES" ]] && exit 0

  echo "üîç Checking for forbidden terms‚Ä¶"
  FAILED=0

  for f in $FILES; do
    if [[ -f "$f" ]]; then
      if grep -nEi "$FORBIDDEN" "$f" >/tmp/forbidden_hits 2>/dev/null; then
        if [[ -n "$ALLOW" ]] && grep -nEi "$ALLOW" "$f" >/tmp/allow_hits 2>/dev/null; then
          if grep -Fvxf /tmp/allow_hits /tmp/forbidden_hits >/tmp/net_hits || true; then
            if [[ -s /tmp/net_hits ]]; then
              echo "üö´ $f"
              cat /tmp/net_hits
              FAILED=1
            fi
          fi
        else
          echo "üö´ $f"
          cat /tmp/forbidden_hits
          FAILED=1
        fi
      fi
    fi
  done

  if [[ "$FAILED" -eq 1 ]]; then
    echo "‚ùå Forbidden terms in staged files. Redact or move to private."
    exit 1
  fi
  echo "‚úÖ Redaction check passed"
fi

# 2. Quality checks (optional)
echo "üîç Running quality checks‚Ä¶"

# JS/TS linting
if [[ -f package.json ]]; then
  if command -v npm >/dev/null 2>&1; then
    npm run -s lint 2>/dev/null || echo "‚ö†Ô∏è  Lint check skipped (no npm or lint script)"
  fi
fi

# Python linting
if [[ -f pyproject.toml ]]; then
  if command -v ruff >/dev/null 2>&1; then
    ruff . 2>/dev/null || echo "‚ö†Ô∏è  Ruff check skipped"
  fi
fi

echo "‚úÖ All pre-commit checks passed"
